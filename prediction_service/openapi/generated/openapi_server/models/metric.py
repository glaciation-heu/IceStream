from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class Metric(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, time=None, value=None):  # noqa: E501
        """Metric - a model defined in OpenAPI

        :param id: The id of this Metric.  # noqa: E501
        :type id: int
        :param time: The time of this Metric.  # noqa: E501
        :type time: List[date]
        :param value: The value of this Metric.  # noqa: E501
        :type value: List[float]
        """
        self.openapi_types = {
            'id': int,
            'time': List[date],
            'value': List[float]
        }

        self.attribute_map = {
            'id': 'id',
            'time': 'time',
            'value': 'value'
        }

        self._id = id
        self._time = time
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'Metric':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Metric of this Metric.  # noqa: E501
        :rtype: Metric
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Metric.


        :return: The id of this Metric.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Metric.


        :param id: The id of this Metric.
        :type id: int
        """

        self._id = id

    @property
    def time(self) -> List[date]:
        """Gets the time of this Metric.


        :return: The time of this Metric.
        :rtype: List[date]
        """
        return self._time

    @time.setter
    def time(self, time: List[date]):
        """Sets the time of this Metric.


        :param time: The time of this Metric.
        :type time: List[date]
        """

        self._time = time

    @property
    def value(self) -> List[float]:
        """Gets the value of this Metric.


        :return: The value of this Metric.
        :rtype: List[float]
        """
        return self._value

    @value.setter
    def value(self, value: List[float]):
        """Sets the value of this Metric.


        :param value: The value of this Metric.
        :type value: List[float]
        """

        self._value = value
