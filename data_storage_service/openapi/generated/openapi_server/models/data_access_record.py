from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class DataAccessRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, request_id=None, data_id=None, time=None):  # noqa: E501
        """DataAccessRecord - a model defined in OpenAPI

        :param request_id: The request_id of this DataAccessRecord.  # noqa: E501
        :type request_id: str
        :param data_id: The data_id of this DataAccessRecord.  # noqa: E501
        :type data_id: str
        :param time: The time of this DataAccessRecord.  # noqa: E501
        :type time: datetime
        """
        self.openapi_types = {
            'request_id': str,
            'data_id': str,
            'time': datetime
        }

        self.attribute_map = {
            'request_id': 'requestId',
            'data_id': 'dataId',
            'time': 'time'
        }

        self._request_id = request_id
        self._data_id = data_id
        self._time = time

    @classmethod
    def from_dict(cls, dikt) -> 'DataAccessRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DataAccessRecord of this DataAccessRecord.  # noqa: E501
        :rtype: DataAccessRecord
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request_id(self) -> str:
        """Gets the request_id of this DataAccessRecord.


        :return: The request_id of this DataAccessRecord.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id: str):
        """Sets the request_id of this DataAccessRecord.


        :param request_id: The request_id of this DataAccessRecord.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def data_id(self) -> str:
        """Gets the data_id of this DataAccessRecord.


        :return: The data_id of this DataAccessRecord.
        :rtype: str
        """
        return self._data_id

    @data_id.setter
    def data_id(self, data_id: str):
        """Sets the data_id of this DataAccessRecord.


        :param data_id: The data_id of this DataAccessRecord.
        :type data_id: str
        """

        self._data_id = data_id

    @property
    def time(self) -> datetime:
        """Gets the time of this DataAccessRecord.


        :return: The time of this DataAccessRecord.
        :rtype: datetime
        """
        return self._time

    @time.setter
    def time(self, time: datetime):
        """Sets the time of this DataAccessRecord.


        :param time: The time of this DataAccessRecord.
        :type time: datetime
        """

        self._time = time
