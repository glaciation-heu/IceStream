openapi: 3.0.1
servers:
- url: http://localhost:8082/api/v1
  description: Generated server url
paths:
  /stub/workloads:
    get:
      tags:
      - stub-controller
      description: Get data and metadata about all workloads
      operationId: getWorkloads
      parameters:
      - name: startTime
        in: query
        description: Date indicating the beginning of the aggregation
        required: true
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        description: Date indicating the end of the aggregation
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "400":
          description: Malformed request
        "500":
          description: An error occurred on the server side
        "200":
          description: Workloads list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
  /stub/workloads/{workloadId}:
    get:
      tags:
      - stub-controller
      description: Get data and metadata about a specific workload
      operationId: getWorkload
      parameters:
      - name: workloadId
        in: path
        description: Unique workload ID
        required: true
        schema:
          type: string
      - name: startTime
        in: query
        description: Date indicating the beginning of the aggregation
        required: true
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        description: Date indicating the end of the aggregation
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "400":
          description: Malformed request
        "500":
          description: An error occurred on the server side
        "200":
          description: Specific workload information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
  /stub/nodes:
    get:
      tags:
      - stub-controller
      description: Get data and metadata about all worker nodes
      operationId: getNodes
      parameters:
      - name: startTime
        in: query
        description: Date indicating the beginning of the aggregation
        required: true
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        description: Date indicating the end of the aggregation
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Nodes list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        "400":
          description: Malformed request
        "500":
          description: An error occurred on the server side
  /stub/nodes/{nodeId}:
    get:
      tags:
      - stub-controller
      description: Get data and metadata about a specific worker node
      operationId: getNode
      parameters:
      - name: nodeId
        in: path
        description: Unique worker node ID
        required: true
        schema:
          type: string
      - name: startTime
        in: query
        description: Date indicating the beginning of the aggregation
        required: true
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        description: Date indicating the end of the aggregation
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Specific worker node information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        "400":
          description: Malformed request
        "500":
          description: An error occurred on the server side
  /health:
    get:
      tags:
      - health-controller
      operationId: healthCheck
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /clusters/{clusterId}/workloads:
    get:
      tags:
      - clusters-controller
      description: Get all workloads' data and metadata
      operationId: getWorkloads_1
      parameters:
      - name: clusterId
        in: path
        description: Unique identifier for the specific cluster
        required: true
        schema:
          type: string
      - name: startTime
        in: query
        description: Date indicating the beginning of the aggregation
        required: true
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        description: Date indicating the end of the aggregation
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Array of workloads returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
        "400":
          description: Malformed request
        "500":
          description: An error occurred on the server side
  /clusters/{clusterId}/workloads/{workloadId}:
    get:
      tags:
      - clusters-controller
      description: Get data and metadata about a specific workload
      operationId: getWorkload_1
      parameters:
      - name: clusterId
        in: path
        description: Unique identifier for the specific cluster
        required: true
        schema:
          type: string
      - name: workloadId
        in: path
        description: Unique workload ID
        required: true
        schema:
          type: string
      - name: startTime
        in: query
        description: Date indicating the beginning of the aggregation
        required: true
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        description: Date indicating the end of the aggregation
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Workload found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
        "400":
          description: Malformed request
        "500":
          description: An error occurred on the server side
        "404":
          description: Workload with provided ID not found
  /clusters/{clusterId}/nodes:
    get:
      tags:
      - clusters-controller
      description: Get all worker nodes' data and metadata
      operationId: getNodes_1
      parameters:
      - name: clusterId
        in: path
        description: Unique identifier for the specific cluster
        required: true
        schema:
          type: string
      - name: startTime
        in: query
        description: Date indicating the beginning of the aggregation
        required: true
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        description: Date indicating the end of the aggregation
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "400":
          description: Malformed request
        "500":
          description: An error occurred on the server side
        "200":
          description: Array of worker nodes returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
  /clusters/{clusterId}/nodes/{nodeId}:
    get:
      tags:
      - clusters-controller
      description: Get data and metadata about a specific worker node
      operationId: getNode_1
      parameters:
      - name: clusterId
        in: path
        description: Unique identifier for the specific cluster
        required: true
        schema:
          type: string
      - name: nodeId
        in: path
        description: Unique worker node ID
        required: true
        schema:
          type: string
      - name: startTime
        in: query
        description: Date indicating the beginning of the aggregation
        required: true
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        description: Date indicating the end of the aggregation
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "400":
          description: Malformed request
        "500":
          description: An error occurred on the server side
        "200":
          description: Worker node found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        "404":
          description: Worker node with provided ID not found
components:
  schemas:
    RunInfo:
      type: object
      properties:
        nodeId:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
    Workload:
      type: object
      properties:
        id:
          type: string
        runsOn:
          $ref: '#/components/schemas/RunInfo'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/WorkloadResource'
    WorkloadResource:
      type: object
      properties:
        name:
          type: string
        unit:
          type: string
        demanded:
          type: integer
          format: int64
        allocated:
          type: integer
          format: int64
        used:
          type: integer
          format: int64
    Node:
      type: object
      properties:
        id:
          type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/NodeResource'
    NodeResource:
      type: object
      properties:
        name:
          type: string
        unit:
          type: string
        max:
          type: integer
          format: int64
        available:
          type: integer
          format: int64
