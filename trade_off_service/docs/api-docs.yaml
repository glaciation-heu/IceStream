openapi: 3.0.1
servers:
- url: http://localhost:8080/api/v1
  description: Generated server url
paths:
  /workloads/{workloadId}/demand:
    get:
      tags:
      - workloads-controller
      description: Get specific workload demanded resources
      operationId: getWorkloadDemand
      parameters:
      - name: workloadId
        in: path
        description: Unique workload ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: An error occurred on the server side
        "200":
          description: Workload demand found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resources'
        "404":
          description: Workload with provided ID not found
    put:
      tags:
      - workloads-controller
      description: Update specific workload demanded resources
      operationId: updateWorkloadDemand
      parameters:
      - name: workloadId
        in: path
        description: Unique workload ID
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resources'
        required: true
      responses:
        "500":
          description: An error occurred on the server side
        "400":
          description: Malformed request
        "200":
          description: Workload demand updated and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resources'
        "404":
          description: Workload with provided ID not found
  /workloads/{workloadId}/allocated:
    get:
      tags:
      - workloads-controller
      description: Get specific workload allocated resources
      operationId: getWorkloadAllocated
      parameters:
      - name: workloadId
        in: path
        description: Unique workload ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: An error occurred on the server side
        "200":
          description: Workload allocated resources found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resources'
        "404":
          description: Workload with provided ID not found
    put:
      tags:
      - workloads-controller
      description: Update specific workload allocated resources
      operationId: updateWorkloadAllocated
      parameters:
      - name: workloadId
        in: path
        description: Unique workload ID
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resources'
        required: true
      responses:
        "500":
          description: An error occurred on the server side
        "400":
          description: Malformed request
        "200":
          description: Workload allocated resources updated and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resources'
        "404":
          description: Workload with provided ID not found
  /nodes/{nodeId}/maximum-usage:
    get:
      tags:
      - nodes-controller
      description: Get specific node maximum usage metrics
      operationId: getNodeMaximumUsage
      parameters:
      - name: nodeId
        in: path
        description: Unique node ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: An error occurred on the server side
        "404":
          description: Node with provided ID not found
        "200":
          description: Node maximum usage found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resources'
    put:
      tags:
      - nodes-controller
      description: Update specific node maximum usage metrics
      operationId: updateNodeMaximum
      parameters:
      - name: nodeId
        in: path
        description: Unique node ID
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resources'
        required: true
      responses:
        "500":
          description: An error occurred on the server side
        "400":
          description: Malformed request
        "404":
          description: Node with provided ID not found
        "200":
          description: Node maximum usage updated and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resources'
  /nodes/{nodeId}/current-usage:
    get:
      tags:
      - nodes-controller
      description: Get specific node current usage metrics
      operationId: getNodeCurrentUsage
      parameters:
      - name: nodeId
        in: path
        description: Unique node ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: An error occurred on the server side
        "404":
          description: Node with provided ID not found
        "200":
          description: Node current usage found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resources'
    put:
      tags:
      - nodes-controller
      description: Update specific node current usage metrics
      operationId: updateNodeCurrentUsage
      parameters:
      - name: nodeId
        in: path
        description: Unique node ID
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resources'
        required: true
      responses:
        "500":
          description: An error occurred on the server side
        "200":
          description: Node current usage updated and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resources'
        "400":
          description: Malformed request
        "404":
          description: Node with provided ID not found
  /workloads:
    post:
      tags:
      - workloads-controller
      description: Create new workload
      operationId: createWorkload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workload'
        required: true
      responses:
        "500":
          description: An error occurred on the server side
        "400":
          description: Malformed request
        "201":
          description: Workload created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
  /nodes:
    post:
      tags:
      - nodes-controller
      description: Create a new node
      operationId: createNode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
        required: true
      responses:
        "500":
          description: An error occurred on the server side
        "201":
          description: Node created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        "400":
          description: Malformed request
  /workloads/{workloadId}:
    get:
      tags:
      - workloads-controller
      description: Get specific workload
      operationId: getWorkload
      parameters:
      - name: workloadId
        in: path
        description: Unique workload ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: An error occurred on the server side
        "200":
          description: Workload found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
        "404":
          description: Workload with provided ID not found
    delete:
      tags:
      - workloads-controller
      description: Delete specific workload
      operationId: deleteWorkload
      parameters:
      - name: workloadId
        in: path
        description: Unique workload ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: An error occurred on the server side
        "200":
          description: Workload deleted
        "404":
          description: Workload with provided ID not found
  /nodes/{nodeId}:
    get:
      tags:
      - nodes-controller
      description: Get specific node information
      operationId: getNode
      parameters:
      - name: nodeId
        in: path
        description: Unique node ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: An error occurred on the server side
        "404":
          description: Node with provided ID not found
        "200":
          description: Node found and returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
    delete:
      tags:
      - nodes-controller
      description: Delete specific node
      operationId: deleteNode
      parameters:
      - name: nodeId
        in: path
        description: Unique node ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: An error occurred on the server side
        "404":
          description: Node with provided ID not found
        "200":
          description: Node deleted
components:
  schemas:
    Resources:
      type: object
      properties:
        cpuPercentage:
          type: number
          format: double
        gpuPercentage:
          type: number
          format: double
        memoryMB:
          type: integer
          format: int64
        networkReceiveBps:
          type: integer
          format: int64
        networkTransmitBps:
          type: integer
          format: int64
        diskReadMB:
          type: integer
          format: int64
        diskWriteMB:
          type: integer
          format: int64
        energyMW:
          type: number
          format: double
    Workload:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        demand:
          $ref: '#/components/schemas/Resources'
        allocated:
          $ref: '#/components/schemas/Resources'
    Node:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        currentUsage:
          $ref: '#/components/schemas/Resources'
        maximumUsage:
          $ref: '#/components/schemas/Resources'
